// Generated by CoffeeScript 1.12.2
(function() {
  var Data,
    hasProp = {}.hasOwnProperty;

  Data = (function() {
    function Data() {}

    module.exports = Data;

    Data.tax = 0.1055;

    Data.season = ["May", "June", "July", "August", "September", "October"];

    Data.months = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

    Data.numDayMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

    Data.weekdays = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

    Data.days = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"];

    Data.persons = ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"];

    Data.pets = ["0", "1", "2", "3", "4"];

    Data.petPrice = 12;

    Data.year = 17;

    Data.monthIdx = new Date().getMonth();

    Data.monthIdx = 4 <= Data.monthIdx && Data.monthIdx <= 9 ? Data.monthIdx : 4;

    Data.month = Data.months[Data.monthIdx];

    Data.numDays = 15;

    Data.begMay = 15;

    Data.begDay = Data.month === 'May' ? Data.begMay : 1;

    Data.beg = '170515';

    Data.end = '171009';

    Data.configSkytest = {
      apiKey: "AIzaSyAH4gtA-AVzTkwO_FXiEOlgDRK1rKLdJ2k",
      authDomain: "skytest-25d1c.firebaseapp.com",
      databaseURL: "https://skytest-25d1c.firebaseio.com",
      storageBucket: "skytest-25d1c.appspot.com",
      messagingSenderId: "978863515797"
    };

    Data.configSkyline = {
      apiKey: "AIzaSyBjMGVzZ6JgZBs8O7mBQfH6clHYDmjTsGU",
      authDomain: "skyline-fed2b.firebaseapp.com",
      databaseURL: "https://skyline-fed2b.firebaseio.com",
      storageBucket: "skyline-fed2b.appspot.com/",
      messagingSenderId: "279547846849"
    };

    Data.config = function(uri) {
      if (name === 'skyline') {
        return this.configSkyline;
      } else {
        return this.configSkytest;
      }
    };

    Data.databases = {
      skyline: "skyline-fed2b",
      skytest: "skytest-25d1c"
    };

    Data.stripeTestKey = "sk_test_FCa6Z3AusbsdhyV93B4CdWnV";

    Data.stripeTestPub = "pk_test_0VHIhWRH8hFwSeP2n084Ze4L";

    Data.stripeLiveKey = "sk_live_CCbj5oirIeHwTlyKVXJnbrgt";

    Data.stripeLivePub = "pk_live_Lb83wXgDVIuRoEpmK9ji2AU3";

    Data.stripeCurlKey = "sk_test_lUkwzunJkKfFmcEjHBtCfvhs";

    Data.genResId = function(roomUIs) {
      var days, resId, roomId, roomUI;
      resId = "";
      for (roomId in roomUIs) {
        if (!hasProp.call(roomUIs, roomId)) continue;
        roomUI = roomUIs[roomId];
        if (!(!Util.isObjEmpty(roomUI.days))) {
          continue;
        }
        days = Util.keys(roomUI.days).sort();
        resId = days[0] + roomId;
        break;
      }
      if (!Util.isStr(resId)) {
        Util.error('Data.getResId() resId blank');
      }
      return resId;
    };

    Data.genCustId = function(phone) {
      return Util.padEnd(phone.substr(0, 10), 10, '_');
    };

    Data.genPaymentId = function(resId, payments) {
      var paySeq, pays;
      pays = Util.keys(payments).sort();
      paySeq = pays.length > 0 ? toString(parseInt(pays[pays.length - 1]) + 1) : '1';
      return resId + paySeq;
    };

    Data.randomCustKey = function() {
      return Math.floor(Math.random() * (9999999999 - 1000000000)) + 1000000000;
    };

    Data.today = function() {
      var date, year;
      date = new Date();
      year = date.getFullYear() - 2000;
      return Data.toDateStr(date.getDate(), date.getMonth(), year);
    };

    Data.advanceDate = function(resDate, numDays) {
      var day, monthIdx, year;
      year = resDate.substr(0, 2);
      monthIdx = parseInt(resDate.substr(2, 2)) - 1;
      day = parseInt(resDate.substr(4, 2)) + numDays;
      if (day > Data.numDayMonth[monthIdx]) {
        day = day - Data.numDayMonth[monthIdx];
        monthIdx++;
      }
      return Data.toDateStr(day, monthIdx, year);
    };

    Data.nights = function(arrive, depart) {
      var arriveDay, arriveMon, departDay, departMon, num;
      num = 0;
      arriveDay = parseInt(arrive.substr(4, 2));
      arriveMon = parseInt(arrive.substr(2, 2));
      departDay = parseInt(depart.substr(4, 2));
      departMon = parseInt(depart.substr(2, 2));
      if (arriveMon === departMon) {
        num = departDay - arriveDay;
      } else if (arriveMon + 1 === departMon) {
        num = Data.numDayMonth[arriveMon - 1] - arriveDay + departDay;
      }
      return num;
    };

    Data.weekday = function(date) {
      var dayInt, monthIdx, weekdayIdx, year;
      year = parseInt(date.substr(0, 2));
      monthIdx = parseInt(date.substr(2, 2)) - 1;
      dayInt = parseInt(date.substr(4, 2));
      weekdayIdx = new Date(2000 + year, monthIdx, dayInt).getDay();
      return Data.weekdays[weekdayIdx];
    };

    Data.isElem = function($elem) {
      return !(($elem != null) && ($elem.length != null) && $elem.length === 0);
    };

    Data.dayMonth = function(day) {
      var monthDay;
      monthDay = day + Data.begDay - 1;
      if (monthDay > Data.numDayMonth[this.monthIdx]) {
        return monthDay - Data.numDayMonth[Data.monthIdx];
      } else {
        return monthDay;
      }
    };

    Data.toDateStr = function(day, monthIdx, year) {
      if (monthIdx == null) {
        monthIdx = Data.monthIdx;
      }
      if (year == null) {
        year = Data.year;
      }
      return year.toString() + Util.pad(monthIdx + 1) + Util.pad(day);
    };

    return Data;

  })();

}).call(this);
