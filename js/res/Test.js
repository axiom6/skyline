// Generated by CoffeeScript 1.12.2
(function() {
  var $, Test,
    hasProp = {}.hasOwnProperty;

  $ = require('jquery');

  Test = (function() {
    module.exports = Test;

    Test.Data = require('data/test.json');

    function Test(stream, store, room1, res1, pay, pict, book, Data) {
      this.stream = stream;
      this.store = store;
      this.room = room1;
      this.res = res1;
      this.pay = pay;
      this.pict = pict;
      this.book = book;
      this.Data = Data;
      this.rooms = this.room.rooms;
    }

    Test.prototype.doTest = function() {
      var $cell, cust, day, dayId, fn, ref, ref1, res, resId, room, roomId;
      ref = Test.Data;
      for (resId in ref) {
        if (!hasProp.call(ref, resId)) continue;
        res = ref[resId];
        for (roomId in res) {
          if (!hasProp.call(res, roomId)) continue;
          room = res[roomId];
          ref1 = res.days;
          for (dayId in ref1) {
            if (!hasProp.call(ref1, dayId)) continue;
            day = ref1[dayId];
            $cell = $('#R' + roomId + dayId);
            this.book.cellBook($cell);
          }
        }
        cust = res.cust;
        this.getNamePhoneEmail(cust.first, cust.last, cust.phone, cust.email);
        fn = (function(_this) {
          return function() {
            return _this.doGoToPay(res);
          };
        })(this);
        setTimeout(fn, 4000);
      }
    };

    Test.prototype.doGoToPay = function(res) {
      var fn, payment;
      this.book.onGoToPay(null);
      payment = Object.keys(res.payments).sort()[0];
      this.popCC(payment.cc, payment.exp, payment.cvc);
      fn = (function(_this) {
        return function() {
          return _this.pay.submit(null);
        };
      })(this);
      setTimeout(fn, 4000);
    };

    Test.prototype.getNamesPhoneEmail = function(first, last, phone, email) {
      var ev, fv, lv, pv, ref, ref1, ref2, ref3;
      ref = this.pay.isValid('First', first, true), this.pay.first = ref[0], fv = ref[1];
      ref1 = this.pay.isValid('Last', last, true), this.pay.last = ref1[0], lv = ref1[1];
      ref2 = this.pay.isValid('Phone', phone, true), this.pay.phone = ref2[0], pv = ref2[1];
      return ref3 = this.pay.isValid('EMail', email, true), this.pay.email = ref3[0], ev = ref3[1], ref3;
    };

    Test.prototype.popCC = function(cc, exp, cvc) {
      $('#cc-num').val(cc);
      $('#cc-exp').val(exp);
      $('#cc-cvc').val(cvc);
    };

    return Test;

  })();

}).call(this);
