// Generated by CoffeeScript 1.12.2
(function() {
  var $, Input;

  $ = require('jquery');

  Input = (function() {
    module.exports = Input;

    function Input(stream, store, Data, res) {
      this.stream = stream;
      this.store = store;
      this.Data = Data;
      this.res = res;
      this.resv = {};
    }

    Input.prototype.readyInput = function() {
      $('#ResAdd').empty();
      $('#ResAdd').append(this.html());
      $('#ResAdd').hide();
      return this.action();
    };

    Input.prototype.createResv = function(arrive, stayto, roomId) {
      var resv;
      resv = {};
      resv.arrive = arrive;
      resv.stayto = stayto;
      resv.depart = this.Data.advanceDate(stayto, 1);
      resv.roomId = roomId;
      resv.last = "";
      resv.status = 'Skyline';
      resv.action = 'add';
      resv.guests = 4;
      return resv.pets = 0;
    };

    Input.prototype.updateResv = function(date, roomId) {
      var resv;
      resv = this.res.getResv(date, roomId);
      if (resv != null) {
        resv.action = 'put';
        this.populateResv(resv);
      }
      return;
      this.refreshResv(resv);
      this.resv = resv;
    };

    Input.prototype.populateResv = function(resv) {
      this.refreshResv(resv);
      this.resv = resv;
    };

    Input.prototype.html = function() {
      var htm;
      htm = "<table id=\"NRTable\"><thead>";
      htm += "<tr><th>Arrive</th><th>Stay To</th><th>Room</th><th>Name</th>";
      htm += "<th>Guests</th><th>Pets</th><th>Status</th>";
      htm += "<th>Nights</th><th>Price</th><th>Total</th><th>Tax</th><th>Charge</th><th>Action</th></tr>";
      htm += "</thead><tbody>";
      htm += "<tr><td id=\"NRArrive\"></td><td id=\"NRStayTo\"></td><td id=\"NRRoomId\"></td><td>" + (this.names()) + "</td>";
      htm += "<td>" + (this.guests()) + "</td><td>" + (this.pets()) + "</td><td>" + (this.status()) + "</td>";
      htm += "<td id=\"NRNights\"></td><td id=\"NRPrice\"></td><td id=\"NRTotal\"></td><td id=\"NRTax\"></td><td id=\"NRCharge\"></td>";
      htm += "<td id=\"NRSubmit\">" + (this.submit()) + "</td></tr>";
      htm += "</tbody></table>";
      return htm;
    };

    Input.prototype.action = function() {
      $('#NRNames').change((function(_this) {
        return function(event) {
          _this.resv.last = event.target.value;
        };
      })(this));
      $('#NRGuests').change((function(_this) {
        return function(event) {
          _this.resv.guests = event.target.value;
          _this.refreshResv(_this.resv);
        };
      })(this));
      $('#NRPets').change((function(_this) {
        return function(event) {
          _this.resv.pets = event.target.value;
          _this.refreshResv(_this.resv);
        };
      })(this));
      $('#NRStatus').change((function(_this) {
        return function(event) {
          _this.resv.status = event.target.value;
          _this.refreshResv(_this.resv);
        };
      })(this));
      return this.resvSubmits();
    };

    Input.prototype.guests = function() {
      return this.res.htmlSelect('NRGuests', this.Data.persons, 4);
    };

    Input.prototype.pets = function() {
      return this.res.htmlSelect('NRPets', this.Data.pets, 0);
    };

    Input.prototype.status = function() {
      return this.res.htmlSelect('NRStatus', this.Data.statusesSel, 'Skyline');
    };

    Input.prototype.names = function() {
      return this.res.htmlInput('NRNames');
    };

    Input.prototype.submit = function() {
      var htm;
      htm = this.res.htmlButton('NRCreate', 'NRSubmit', 'Create');
      htm += this.res.htmlButton('NRChange', 'NRSubmit', 'Change');
      htm += this.res.htmlButton('NRDelete', 'NRSubmit', 'Delete');
      return htm;
    };

    Input.prototype.refreshResv = function(resv) {
      var room;
      resv.nights = this.Data.nights(resv.arrive, resv.depart);
      resv.price = resv.status === 'Skyline' || resv.status === 'Deposit' ? this.res.calcPrice(resv.roomId, resv.guests, resv.pets) : resv.price;
      resv.deposit = resv.price * 0.5;
      resv.total = resv.nights * resv.price;
      resv.tax = parseFloat(Util.toFixed(resv.total * this.Data.tax));
      resv.charge = Util.toFixed(resv.total + resv.tax);
      room = '#' + resv.roomId;
      if (resv.roomId === 'N') {
        room = 'North';
      }
      if (resv.roomId === 'S') {
        room = 'South';
      }
      $('#NRArrive').text(this.Data.toMMDD(resv.arrive));
      $('#NRStayTo').text(this.Data.toMMDD(resv.stayto));
      $('#NRRoomId').text(room);
      $('#NRNames').val(resv.last);
      $('#NRGuests').val(resv.guests);
      $('#NRPets').val(resv.pets);
      $('#NRStatus').val(resv.status);
      $('#NRNights').text(resv.nights);
      $('#NRPrice').text('$' + resv.price);
      $('#NRTotal').text('$' + resv.total);
      $('#NRTax').text('$' + resv.tax);
      $('#NRCharge').text('$' + resv.charge);
      if (resv.action === 'add') {
        $('#NRCreate').show();
        $('#NRChange').hide();
        $('#NRDelete').hide();
      } else if (resv.action === 'put') {
        $('#NRCreate').hide();
        $('#NRChange').show();
        $('#NRDelete').show();
      }
    };

    Input.prototype.resvSubmits = function() {
      var doDel, doRes;
      doRes = (function(_this) {
        return function() {
          var r;
          r = _this.resv;
          return _this.res.createResvSkyline(r.arrive, r.depart, r.roomId, r.last, r.status, r.guests, r.pets);
        };
      })(this);
      doDel = (function(_this) {
        return function() {
          _this.resv.status = 'Free';
          _this.res.updateDaysFromResv(_this.resv);
          return _this.resv;
        };
      })(this);
      $('#NRCreate').click((function(_this) {
        return function() {
          var resv;
          if (Util.isStr(_this.resv.last)) {
            resv = doRes();
            _this.res.addResv(resv);
          } else {
            alert('Incomplete Reservation');
          }
        };
      })(this));
      $('#NRChange').click((function(_this) {
        return function() {
          var resv;
          resv = doRes();
          _this.res.putResv(resv);
        };
      })(this));
      $('#NRDelete').click((function(_this) {
        return function() {
          var resv;
          resv = doDel();
          resv.status = 'Cancel';
          _this.res.delResv(resv);
        };
      })(this));
      return $('#NRCancel').click((function(_this) {
        return function() {
          var resv;
          resv = doRes();
          resv.status = 'Cancel';
          _this.res.canResv(resv);
        };
      })(this));
    };

    return Input;

  })();

}).call(this);
