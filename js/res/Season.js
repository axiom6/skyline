// Generated by CoffeeScript 1.12.2
(function() {
  var $, Season,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $ = require('jquery');

  Season = (function() {
    module.exports = Season;

    function Season(stream, store, Data, res) {
      this.stream = stream;
      this.store = store;
      this.Data = Data;
      this.res = res;
      this.onMonthClick = bind(this.onMonthClick, this);
      this.rooms = this.res.rooms;
      this.showingMonth = 'Master';
    }

    Season.prototype.html = function() {
      var htm, i, len, month, ref;
      htm = "";
      ref = this.Data.season;
      for (i = 0, len = ref.length; i < len; i++) {
        month = ref[i];
        htm += "<div id=\"" + month + "C\" class=\"" + month + "C\">" + (this.monthTable(month)) + "</div>";
      }
      return htm;
    };

    Season.prototype.monthTable = function(month) {
      var begDay, col, day, endDay, htm, i, j, k, monthIdx, row, weekday;
      monthIdx = this.Data.months.indexOf(month);
      begDay = new Date(2000 + this.Data.year, monthIdx, 1).getDay() - 1;
      endDay = this.Data.numDayMonth[monthIdx];
      htm = "<div   class=\"SeasonTitle\">" + month + "</div>";
      htm += "<table class=\"SeasonTable\"><thead><tr>";
      for (day = i = 0; i < 7; day = ++i) {
        weekday = this.Data.weekdays[day];
        htm += "<th>" + weekday + "</th>";
      }
      htm += "</tr></thead><tbody>";
      for (row = j = 0; j < 6; row = ++j) {
        htm += "<tr>";
        for (col = k = 0; k < 7; col = ++k) {
          day = this.monthDay(begDay, endDay, row, col);
          htm += "<td><div class=\"TDC\">" + (this.roomDayHtml(monthIdx, day)) + "</div></td>";
        }
        htm += "</tr>";
      }
      return htm += "</tbody></table>";
    };

    Season.prototype.roomDayHtml = function(monthIdx, day) {
      var date, htm, i, last, resv, roomClass, roomId, roomNum;
      htm = "";
      if (day === 0) {
        return htm;
      }
      htm += "<div class=\"DayC\">" + day + "</div>";
      for (roomNum = i = 1; i <= 10; roomNum = ++i) {
        roomId = this.Data.getRoomIdFromNum(roomNum);
        roomClass = "RoomC" + roomId;
        date = this.Data.toDateStr(day, monthIdx);
        resv = this.res.getResv(date, roomId);
        last = resv != null ? resv.last : "";
        htm += "<div class=\"" + roomClass + "\">#" + roomId + " " + last + "</div>";
      }
      return htm;
    };

    Season.prototype.monthDay = function(begDay, endDay, row, col) {
      var day;
      day = row * 7 + col - begDay;
      day = 1 <= day && day <= endDay ? day : 0;
      return day;
    };

    Season.prototype.roomDayId = function(monthIdx, day, roomId) {
      var date;
      date = this.Data.dateStr(day, monthIdx);
      return this.cellId('S', roomId, date);
    };

    Season.prototype.onMonthClick = function(event) {
      this.showMonth($(event.target).text());
    };

    Season.prototype.showMonth = function(month) {
      var $master;
      $master = $('#Season');
      if (month === this.showingMonth) {
        this.removeAllMonthStyles();
        $('.TDC').hide();
        $master.children().show();
        this.showingMonth = 'Master';
      } else {
        $master.children().hide();
        $('.TDC').show();
        this.$month(month).css({
          left: 0,
          top: 0,
          width: '100%',
          height: '740px',
          fontSize: '14px',
          border: 'none'
        }).show();
        this.showingMonth = month;
      }
    };

    Season.prototype.removeAllMonthStyles = function() {
      var i, len, month, ref, results;
      ref = this.Data.season;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        month = ref[i];
        results.push(this.$month(month).removeAttr('style'));
      }
      return results;
    };

    Season.prototype.$month = function(month) {
      return $('#' + month + 'C');
    };

    Season.prototype.cellId = function(pre, date, roomId) {
      return pre + date + roomId;
    };

    Season.prototype.$cell = function(pre, date, roomId) {
      return $('#' + this.cellId(pre, date, roomId));
    };

    Season.prototype.allocCell = function(roomId, date, status) {
      this.cellStatus(this.$cell('S', date, roomId), status);
    };

    Season.prototype.cellStatus = function($cell, status) {
      $cell.removeClass().addClass("own-" + status).attr('data-status', status);
    };

    return Season;

  })();

}).call(this);
